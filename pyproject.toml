[build-system]
requires = ["setuptools>=69", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "travelroboto"
version = "0.1.0"
requires-python = ">=3.11.7"
description = "AI-powered travel assistant"
readme = "README.md"
authors = [
  { name = "Craig Sakuma", email = "craig.sakuma@gmail.com" }
]


license = { text = "MIT" }
keywords = ["travel", "fastapi", "langchain", "chatbot", "ai"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Framework :: FastAPI",
  "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]
# --- Core runtime dependencies ---
dependencies = [
    # Core web framework
    "fastapi>=0.111.0",
    "uvicorn[standard]>=0.30.0",
    "jinja2>=3.1.4",
    "python-multipart>=0.0.9",

    # Data handling and validation
    "pandas>=2.2.2",
    "pydantic>=2.9.2",
    "pydantic-settings>=2.4.0",
    "psycopg2-binary>=2.9",
    "asyncpg>=0.29.0",       

    # Google Gmail API
    "google-api-python-client==2.176.0",
    "google-auth==2.31.0",
    "google-auth-httplib2==0.2.0",
    "google-auth-oauthlib==1.2.2",

    # HTML parsing
    "beautifulsoup4==4.12.3",

    # LangChain + OpenAI
    "langchain==0.2.10",
    "langchain-openai==0.1.17",
]

# --- Optional extras (install with: pip install .[dev]) ---
[project.optional-dependencies]
dev = [
    "notebook>=7.2.2",
    "pytest>=8.0.0",
    "pytest-mock>=3.12.0",
    "pytest-cov>=5.0.0",  
    "ruff>=0.6.0",
    "mypy>=1.10.0",
    "pre-commit>=3.7.0"
]

[project.urls]
Homepage = "https://travelroboto.com/"
Repository = "https://github.com/craigsakuma/travelroboto"
Issues = "https://github.com/craigsakuma/travelroboto/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["app*"]

[tool.ruff]
line-length = 99
indent-width = 4
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "W", "I", "UP", "B", "SIM"]
ignore = ["E501"]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.isort]
known-first-party = ["app"]
combine-as-imports = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-q --cov=app --cov-report=term-missing"

[tool.coverage.run]
branch = true
source = ["app"]

[tool.coverage.report]
show_missing = true
skip_empty = true
exclude_lines = [
  "pragma: no cover",
  "if TYPE_CHECKING:",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.mypy]
python_version = "3.11"
files = ["app", "tests"]
follow_imports = "silent"
ignore_missing_imports = false
strict_optional = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = ["app", "app.*"]
disallow_untyped_defs = true
disallow_incomplete_defs = true
no_implicit_optional = true
warn_return_any = true

[[tool.mypy.overrides]]
module = ["langchain", "langchain.*", "langchain_openai", "langchain_openai.*"]
ignore_missing_imports = true
